---
import Layout from "../layouts/Layout.astro";
import { allTypes } from "../pokemon_types";
import { gruntCatchphrasesInOrder } from "../grunt_catchphrases";
import PokemonPill from "../components/PokemonPill.astro";
import PageContent from "../components/PageContent.astro";
import TypeList from "../components/TypeList.astro";
import TypeListItem from "../components/TypeListItem.astro";
import BlockLink from "../components/BlockLink.astro";
import Pill from "../components/Pill.astro";
import AttackTypesIntro from "../components/AttackTypesIntro.astro";
import DefenseTypesIntro from "../components/DefenseTypesIntro.astro";

const getShortText = (text: string) => {
  if (text.length < 35) {
    return text
  }

  const words = text.split(' ')

  const result = { index: -1, sum: 0 };
  words.some(function (w: string, idx: number) {
      result.index = idx;
      if (result.sum + w.length > 25) {
          return true;
      }
      result.sum += w.length;
  });

  const wordsToUse = words.slice(0, result.index)
  return `${wordsToUse.join(' ')}...`
  }
---

<Layout title="Pokemon Go Companion" showLogo={false}>
  <PageContent>
    <h1
      transition:name="logo"
      transition:animate="initial"
      class="text-gradient my-8"
    >
      Pokemon Go Companion
    </h1>

    <div>
      <AttackTypesIntro />

      <div transition:name="typelist-attack" transition:animate="initial">
        <TypeList>
          {
            allTypes.map((type) => (
              <TypeListItem>
                <BlockLink href={`/pokemon-go-cheatsheet/types/attack/${type}`}>
                  <PokemonPill interactive type={type} />
                </BlockLink>
              </TypeListItem>
            ))
          }
        </TypeList>
      </div>
    </div>

    <div>
      <DefenseTypesIntro />

      <div transition:name="typelist-defense" transition:animate="initial">
        <TypeList>
          {
            allTypes.map((type) => (
              <TypeListItem>
                <BlockLink href={`/pokemon-go-cheatsheet/types/defense/${type}`}>
                  <PokemonPill interactive type={type} />
                </BlockLink>
              </TypeListItem>
            ))
          }
        </TypeList>
      </div>
    </div>



    <div class="grunt-wrapper">
      <h2>Team R challenges</h2>

      <ul role="list" class="link-card-grid">
        {
          gruntCatchphrasesInOrder.map((challenge) => (
            <div class="grunt-wrap">
            <li class="grunt">
              <a href={`/pokemon-go-cheatsheet/grunt/${challenge.type}`} class="grunt-link">
                <Pill
                  color="#5F6DBC"
                  className="h-full"
                  interactive
                >

                  {getShortText(challenge.text)}
                </Pill>
              </a>
            </li>
            </div>
          ))
        }
      </ul>
    </div>

    <div class="grunt-wrapper">
      <h2>Quiz</h2>

      <p class="leading-6 my-6">
        Answer 10 questions about the pokemon attack type effectiveness and
        find out how well you know the game rules!
      </p>

      <a href='/pokemon-go-cheatsheet/quiz' class="w-8 block">
        <Pill
          color="#5F6DBC"
          interactive
        >
          Start Quiz
        </Pill>
      </a>
    </div>


  </PageContent>
</Layout>

<style>
  h1 {
    font-size: 3rem;
    font-weight: 500;
    line-height: 1;
  }

  h2 {
    font-size: 2rem;
    font-weight: 500;
    line-height: 1;
    margin-top: 1.5em;
    margin-bottom: 0.8em;
  }

  ul {
    padding: 0;
    margin: 0;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    grid-gap: 16px;
  }
  li {
    list-style: none;
    display: flex;
    justify-content: center;
  }

  div.grunt-wrap {
    /* background: var(--accent-gradient); */
    position: relative;
    border-radius: 8px;
  }

  li.grunt {
    /* background: #222; */
    height: 100%;
    line-height: 1.25;
  }

  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  a.grunt-link {
    display: flex;
    gap: 1em;
    align-items: center;
    text-decoration: none;
    width: 100%;
  }

  a.grunt-link span {
    text-transform: uppercase;
  }

  .grunt-wrapper {
    margin-bottom: 50px;
  }
</style>
