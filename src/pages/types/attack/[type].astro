---
import type { InferGetStaticParamsType } from "astro";
import { fade } from "astro:transitions";
import PokemonPill from "../../../components/PokemonPill.astro";
import Layout from "../../../layouts/Layout.astro";
import { allTypes } from "../../../pokemon_types";
import { getStrongMatchups, getWeakMatchups } from "../../../matchups";
import PageContent from "../../../components/PageContent.astro";
import TypeList from "../../../components/TypeList.astro";
import TypeListItem from "../../../components/TypeListItem.astro";
import BlockLink from "../../../components/BlockLink.astro";
import AttackTypesIntro from "../../../components/AttackTypesIntro.astro";
import PokemonTypeList from "../../../components/PokemonTypeList/PokemonTypeList";

export function getStaticPaths() {
  return allTypes.map((type) => ({ params: { type } }));
}

type Params = InferGetStaticParamsType<typeof getStaticPaths>;

const { type } = Astro.params as Params;

const strongMatchups = getStrongMatchups(type);
const weakMatchups = getWeakMatchups(type);
---

<Layout title={`Pokemon Go Cheatsheet - ${type} attack`}>
  <PageContent>
    <AttackTypesIntro />

    <div
      transition:name="type-header"
      transition:animate={fade({ duration: 500 })}
    >
      <PokemonPill type={type} />
    </div>

    <div class="mt-8">
      <PokemonTypeList types={[type]}/> attack type is strong against pokemon types
      <ul>
        {
          strongMatchups.map((t) => (
            <li>
              <div>
                <PokemonPill type={t} />
              </div>
            </li>
          ))
        }
      </ul>
    </div>

    <div>
      <PokemonTypeList types={[type]}/> attack type is weak against pokemon types
      <ul>
        {
          weakMatchups.map((t) => (
            <li>
              <div>
                <PokemonPill type={t} />
              </div>
            </li>
          ))
        }
      </ul>
    </div>

    <div transition:name="typelist-attack" transition:animate="initial" class="typelist">
      <h3>List of all attack types</h3>
      <TypeList>
        {
          allTypes.map((type) => (
            <TypeListItem>
              <BlockLink href={`/pokemon-go-cheatsheet/types/attack/${type}`}>
                <PokemonPill interactive type={type} />
              </BlockLink>
            </TypeListItem>
          ))
        }
      </TypeList>
    </div>
  </PageContent>
</Layout>

<style>


  ul {
    list-style: none;
    padding: 0;
    margin: 16px 0;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    grid-gap: 16px;
  }

  li {
    display: flex;
    justify-content: center;
    width: 100%;
  }

  li > div {
    display: flex;
    width: 100%;
  }

  .typelist {
    margin-top: 64px;
  }

  h3 {
    margin-bottom: 12px;
  }
</style>
