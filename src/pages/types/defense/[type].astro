---
import type { InferGetStaticParamsType } from "astro";
import PokemonPill from "../../../components/PokemonPill.astro";
import Layout from "../../../layouts/Layout.astro";
import { allTypes } from "../../../pokemon_types";
import {
  getStrongMatchupsToDefeat,
  getWeakMatchupsToDefeat,
} from "../../../matchups";
import PageContent from "../../../components/PageContent.astro";
import TypeList from "../../../components/TypeList.astro";
import TypeListItem from "../../../components/TypeListItem.astro";
import BlockLink from "../../../components/BlockLink.astro";

export function getStaticPaths() {
  return allTypes.map((type) => ({ params: { type } }));
}

type Params = InferGetStaticParamsType<typeof getStaticPaths>;

const { type } = Astro.params as Params;

const strongMatchups = getStrongMatchupsToDefeat([type]);
const weakMatchups = getWeakMatchupsToDefeat([type]);
---

<Layout title={`Pokemon Go Companion - ${type} attack`}>
  <div transition:name="type-header" transition:animate="slide">
    <PokemonPill type={type} />
  </div>

  <PageContent>
    <div>How to defeat</div>

    <div>
      Strong
      <ul>
        {
          strongMatchups.map((t) => (
            <li>
              <div>
                <PokemonPill type={t} />
              </div>
            </li>
          ))
        }
      </ul>
    </div>

    <div>
      Weak
      <ul>
        {
          weakMatchups.map((t) => (
            <li>
              <div>
                <PokemonPill type={t} />
              </div>
            </li>
          ))
        }
      </ul>
    </div>

    <div transition:name="typelist-defense" transition:animate="initial">
      <TypeList>
        {
          allTypes.map((type) => (
            <TypeListItem>
              <BlockLink href={`/pokemon-go-companion/types/defense/${type}`}>
                <PokemonPill interactive type={type} />
              </BlockLink>
            </TypeListItem>
          ))
        }
      </TypeList>
    </div>
  </PageContent>
</Layout>

<style>
  div {
    color: white;
  }

  ul {
    list-style: none;
    padding: 0;
    margin: 16px 0;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    grid-gap: 16px;
  }

  li {
    display: flex;
    justify-content: center;
    width: 100%;
  }

  li > div {
    display: flex;
    width: 100%;
  }
</style>
